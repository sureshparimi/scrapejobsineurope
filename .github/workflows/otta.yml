name: Scrape latest jobs

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v3

      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Installing necessary packages
        run: |
          apt list --installed
          sudo apt purge google-chrome-stable
          pip install chromedriver-autoinstaller selenium pyvirtualdisplay
          sudo apt-get install xvfb
          pip install requests beautifulsoup4 pandas webdriver-manager selenium

      - name: Run the scraping script
        run: python scratchpad.py || echo "Script failed, continuing workflow"

      - name: Parse ottacomdata.json into table
        id: parse-json
        run: |
          echo "| Job Title | Job Location | Job Link | Job Posted |" > README.md
          echo "| --- | --- | --- | --- |" >> README.md
          while IFS="|" read -r job_title job_location job_link job_posted; do
            flag=""
            country=$(curl -s "https://api.country.com/v1/locations?q=$job_location" | jq -r '.[0].country')
            case "$country" in
              "Austria") flag="ðŸ‡¦ðŸ‡¹";;
              "Belgium") flag="ðŸ‡§ðŸ‡ª";;
              "Bulgaria") flag="ðŸ‡§ðŸ‡¬";;
              "Croatia") flag="ðŸ‡­ðŸ‡·";;
              "Cyprus") flag="ðŸ‡¨ðŸ‡¾";;
              "Czech Republic") flag="ðŸ‡¨ðŸ‡¿";;
              "Denmark") flag="ðŸ‡©ðŸ‡°";;
              "Estonia") flag="ðŸ‡ªðŸ‡ª";;
              "Finland") flag="ðŸ‡«ðŸ‡®";;
              "France") flag="ðŸ‡«ðŸ‡·";;
              "Germany") flag="ðŸ‡©ðŸ‡ª";;
              "Greece") flag="ðŸ‡¬ðŸ‡·";;
              "Hungary") flag="ðŸ‡­ðŸ‡º";;
              "Ireland") flag="ðŸ‡®ðŸ‡ª";;
              "Italy") flag="ðŸ‡®ðŸ‡¹";;
              "Latvia") flag="ðŸ‡±ðŸ‡»";;
              "Lithuania") flag="ðŸ‡±ðŸ‡¹";;
              "Luxembourg") flag="ðŸ‡±ðŸ‡º";;
              "Malta") flag="ðŸ‡²ðŸ‡¹";;
              "Netherlands") flag="ðŸ‡³ðŸ‡±";;
              "Poland") flag="ðŸ‡µðŸ‡±";;
              "Portugal") flag="ðŸ‡µðŸ‡¹";;
              "Romania") flag="ðŸ‡·ðŸ‡´";;
              "Slovakia") flag="ðŸ‡¸ðŸ‡°";;
              "Slovenia") flag="ðŸ‡¸ðŸ‡®";;
              "Spain") flag="ðŸ‡ªðŸ‡¸";;
              "Sweden") flag="ðŸ‡¸ðŸ‡ª";;
              *) flag="";;
            esac
            echo "| $job_title | $flag $job_location | [Apply]($job_link) | $job_posted |" >> README.md
          done < <(jq -r '.[] | "\(.job_title)|\(.job_location)|\(.JobLink)|\(.JobPosted // (now | strftime("%e %B %Y %l:%M %p %Z")))"' ottacomdata.json) || echo "JSON parsing failed"

      - name: Set Git user credentials
        run: |
          git config --global user.name "Suresh Parimi"
          git config --global user.email "reachparimi@gmail.com"

      - name: Pull changes from remote repository
        run: git pull

      - name: Commit and push if it changed
        run: |
          git add README.md
          timestamp=$(date -u)
          git commit -m "Latest jobs: ${timestamp}" || exit 0
          git push
