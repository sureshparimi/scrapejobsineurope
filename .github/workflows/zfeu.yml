name: Scrape latest jobs

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'

jobs:
  ottacom:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install necessary packages
        run: |
          pip install requests beautifulsoup4 pandas webdriver-manager selenium

      - name: Run the scraping script
        run: python scratchpad.py || echo "Script failed, continuing workflow"

      - name: Set Git user credentials
        run: |
          git config --global user.name "Suresh Parimi"
          git config --global user.email "reachparimi@gmail.com"

  relocatewithus:
    runs-on: ubuntu-latest

    steps:
      - name: Checking out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install requests beautifulsoup4 pandas selenium

      - name: Run the scraping script
        run: python relocatewithus.py || echo "Script failed, continuing workflow"

      - name: Set Git user credentials
        run: |
          git config --global user.name "Suresh Parimi"
          git config --global user.email "reachparimi@gmail.com"

  combine-data:
    needs: [ottacom, relocatewithus]
    runs-on: ubuntu-latest

    steps:
      - name: Checking out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install jsonlines

      - name: Combine data from ottacomdata.json and relocatewithusjobs.json
        run: |
          cat ottacomdata.json > existingjobs.json
          cat relocatewithusjobs.json > newjobs.json
          jq -s add existingjobs.json newjobs.json > alljobs.json

      - name: Remove records with null values
        run: jq 'map(select(.position and .location and .description))' alljobs.json > filteredjobs.json

      - name: Generate individual README files for each job
        run: |
          mkdir jobs
          jq -c '.[]' filteredjobs.json | while read -r job; do
            title=$(echo "$job" | jq -r '.position')
            filename=$(echo "$title" | tr -cd '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')
            echo "| $(echo "$job" | jq -r '.position') | $(echo "$job" | jq -r '.location') | [Apply]($(echo "$job" | jq -r '.description')) | $(echo "$job" | jq -r '.post_date') | $(echo "$job" | jq -r '.visa') |" > "jobs/$filename.md"
          done

      - name: Update main README.md with links to job files
        run: |
          echo "# Latest Jobs" > README.md
          echo "" >> README.md
          echo "This page is updated at $(TZ='Asia/Kolkata' date +'%B %d, %Y %H:%M:%S')" >> README.md
          echo "" >> README.md
          echo "## Job Listings" >> README.md
          echo "" >> README.md
          echo "- [Job 1](jobs/job1.md)" >> README.md
          echo "- [Job 2](jobs/job2.md)" >> README.md

      - name: Set Git user credentials
        run: |
          git config --global user.name "Suresh Parimi"
          git config --global user.email "reachparimi@gmail.com"

      - name: Commit and push
        run: |
          git add README.md
          git add jobs
          timestamp=$(date -u)
          git commit -m "Latest jobs: ${timestamp}" || exit 0
          git push
